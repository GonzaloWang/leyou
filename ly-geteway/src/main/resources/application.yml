server:
  port: 10010
spring:
  application:
    name: api-gateway
  profiles:
    include:
      redis   # redis配置自己写个application-redis.yml配上去
  cloud:
    gateway:
      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true # 是否将当前cors配置加入到SimpleUrlHandlerMapping中，解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOrigins: # 允许哪些网站的跨域请求
              - "http://manage.leyou.com"
              - "http://www.leyou.com"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期

      default-filters: # 默认过滤项
        - StripPrefix=1 # 去除路由前缀
        - name: Hystrix # 指定过滤工厂名称（可以是任意过滤工厂类型）
          args: # 指定过滤的参数
            name: fallbackcmd  # hystrix的指令名
            fallbackUri: forward:/hystrix/fallback # 失败后的跳转路径
        - name: RequestRateLimiter #请求数限流 名字不能随便写
          args:
            key-resolver: "#{@ipKeyResolver}" # 指定一个key生成器
            redis-rate-limiter.replenishRate: 30 # 生成令牌的速率
            redis-rate-limiter.burstCapacity: 60 # 桶的容量
      routes:
      - id: item-service
        uri: lb://item-service
        predicates:
        - Path=/item/**

      - id: auth-service
        uri: lb://auth-service
        predicates:
          - Path=/auth/**
      - id: search-service
        uri: lb://search-service
        predicates:
          - Path=/search/**
      - id: user-service
        uri: lb://user-service
        predicates:
          - Path=/user/**


eureka:
  client:
    service-url:
      defaultZone: http://ly-registry:10086/eureka

ly:
  auth:
    clientId: api-gateway
    secret: 1234